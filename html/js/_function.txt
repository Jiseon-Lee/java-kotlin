함수(function)
 - 자바의 메소드와 같은 개념으로 리턴타입은 따로 없고, 리턴값은 필요에 따라 지정할 수 있음
 - 함수는 크게 사용자 정의 함수와 내장 함수로 구분됨

1. 사용자 정의 함수
 - 개발자가 직접 만들어서 사용하는 함수
 - 문법
 	function 함수명([매개변수(들)]) {
		함수내용;
		[return 값;]
	}
 - function : 함수를 생성시키는 명령어
 - 함수명 : 변수이름과 동일한 방식으로 지으면 됨
 	리턴값이 논리값이면 is~, 산술적인 계산을 하면 cal~, 초기화에 사용되면 init~ 으로 시작하면 좋음
 - 매개변수 : 함수가 작업할 때 필요한 데이터를 받아오는 것으로 생략가능
 	매개변수에는 특정 값 뿐만 아니라 요소(태그)같은 객체나 배열도 들어갈 수 있음
 - return : 함수의 실행결과를 함수를 호출한 것으로 리턴하는 명령어
 	생략하면 리턴값 없는 함수가 되며, 값 없이 return만 할 수도 있음(함수 종료)

 - 함수는 대부분 사용자가 일으키는 이벤트에 따라 호출되어 동작함
 - 함수를 정의하기 전에 호출하면 동작하지 않음
 	자동호출 : 페이지가 열리면서 자동으로 호출하는 것을 의미(페이지 로딩 이벤트에서 호출하는 것)

2. 내장 함수
 - 자바스크립트가 자체적으로 제공하는 함수들을 의미
 - 시스템(웹브라우저)에 정의되어 있으므로 따로 정의하지 않아도 사용가능

1) eval()
 - 매개변수로 전달된 문자열을 자바스크립트 명령으로 인식하여 처리하는 함수
 - 문법
 	eval("문자열");	-> 지정된 문자열을 자바스크립트 코드로 바꾸어 처리
	예) eval("a = 1 + 2");	-> 1 + 2의 값을 a변수에 저장

2) parseInt(), parseFloat()
 - 숫자형 인수를 정수나 실수로 변환하는 함수
 - 문법
 	parseInt("숫자형 문자열" 또는 실수[, 진법]);	parseFloat("숫자형 문자열");
 - parseInt()는 반올림이 아닌 내림으로 정수 부분만 취함
 - parseInt()는 진법을 입력하면 인수로 입력된 값은 2, 8, 16진수로 변환함

3) isFinite(), isNaN()
 - 인수가 유리수인지 여부와 숫자인지 여부를 논리값으로 리턴하는 함수
 - 문법1 : isFinite(검사할 숫자) : 지정된 숫자가 유리수이면 true를 리턴
 - 문법2 : isNaN(검사할 값) : 지정된 값이 숫자이면 false를 리턴
 
4) Number(), String()
 - 인수를 각각 숫자와 문자열로 변환하는 함수
 - 문법1 : Number("숫자로 변환할 문자열");
 - 문법2 : String("문자열로 변환할 숫자");
 - Number()에서 숫자로 변환할 문자열에 글자가 섞여 있으면 오류발생(NaN)
 - String()으로 문자열로 변환하는 것보다 + ""으로 처리하는 경우가 더 많음

5) escape(), unescape()
 - 인수들을 각각 인코딩(암호화) 및 디코딩(복호화)해주는 함수
 - 문법1 : excape(인코딩할 문자열)
 - 문법2 : unexcape(디코딩할 문자열)
 - 한글 등이 온라인상에서 깨지는 현상을 막기 위해 사용되는 함수들로 url의 쿼리스트링으로 데이터를 주고 받을 때 사용됨

